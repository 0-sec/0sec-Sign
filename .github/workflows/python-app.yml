# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: 零组文库签到
on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
         python -m pip install --upgrade pip
         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Get Setting
      run: |
        pushType:${{secrets.pushType}}
        DingtalkAccessToken:${{secrets.DingtalkAccessToken}}
        FTServerKey:${{secrets.FTServerKey}}
        TelegramToken:${{secrets.TelegramToken}}
        TelegramChadId:${{secrets.TelegramChadId}}
        BarkToken:${{secrets.BarkToken}}
        BarkServer:${{secrets.BarkServer}}
        PlusPush:${{secrets.PlusPush}}
        EwechatPushToken:${{secrets.EwechatPushToken}}
        EwechatAgentId:${{secrets.EwechatAgentId}}
        EwechatAppSecrets:${{secrets.EwechatAppSecrets}}
        VcUser:${{secrets.VcUser}}
        VcPass:${{secrets.VcPass}}
        ZsecWikiUser:${{secrets.ZsecWikiUser}}
        ZsecWikiPass:${{secrets.ZsecWikiPass}}
    - name: Run
      run: |
       if [ ${FTServerKey}]; then FTServerKey= $FTServerKey ;fi
       if [ ${TelegramToken}]; then TelegramToken= $TelegramToken ;fi
       if [ ${TelegramChadId}]; then TelegramChadId= $TelegramChadId ;fi
       if [ ${BarkToken}]; then BarkToken= $BarkToken ;fi
       if [ ${BarkServer}]; then BarkServer= $BarkServer ;fi
       if [ ${PlusPush}]; then PlusPush= $PlusPush ;fi
       if [ ${EwechatPushToken}]; then EwechatPushToken= $EwechatPushToken ;fi
       if [ ${EwechatAgentId}]; then EwechatAgentId = $EwechatAgentId ;fi
       if [ ${EwechatAppSecrets}]; then EwechatAppSecrets= $EwechatAppSecrets ;fi
       python3 0secSign.py
